show tables;
create table activities (id serial primary key,verb integer foreign key,actor integer foreign key,object integer foreign key,target integer foreign key);
create table activities (  id serial primary key,  verb integer,  actor integer,  object integer,  target integer);
    create table verbs (      verb_id serial primary key,      verb_text text    );
show tables;
show ;
select * from pg_catalog.pg_tables where ;
drop table activities;
    create table activities (      activity_id serial primary key,      verb int references verbs (verb_id),      actor int references actors (actor_id),      object int references objects (object_id),      target int references targets (target_id)    );
drop table activities;
    create table activities (      activity_id serial primary key,      verb int references verbs (verb_id),      created timestamp    );
insert (1, today) into activities;
insert (1, timestamp today) into activities;
insert into activities value (1, timestamp today);
insert into activities values (1, timestamp today);
insert into activities (1, timestamp today);
insert into activities (, timestamp today);
insert into activities ("1", "today");
insert into activities ("1", "1", "today");
insert into activities ("1", "1", "today");
select version();
select version();
select current_date;
select 2 + 2;
\h
\h SHOW
SHOW ALL;
SHOW ALL;
\i basics.sql 
create table weather (  city     varchar(80),  temp_lo  int,  temp_hi  int,  prcp     real,  date     date);
create table cities (  name     varchar(80),  location point);
insert into weather (city, temp_lo, temp_hi, prcp, date)  values ('San Francisco', 46, 50, 0.25, '1994-11-27');
select * from weather;
insert into cities values ('San Francisco', '(-194.0, 53.0)');
SELECT * from cities;
insert into weather (city, temp_lo, temp_hi, prcp, date)  values ('San Franciso', 43, 57, 0.0, '1994-11-29');
select * from weather;
delete from weather where city = 'San Franciso';
select * from weather;
insert into weather (city, temp_lo, temp_hi, prcp, date)  values ('San Francisco', 43, 57, 0.0, '1994-11-29');
select * from weather;
insert into weather (date, city, temp_hi, temp_lo)  values ('1994-11-29', 'Hayward', 54, 37);
select * from weather;
select * from weather ;
select city, temp_lo from weather ;
select city, (temp_lo + temp_hi) / 2 from weather ;
select city, (temp_lo + temp_hi) / 2 as temp_avg from weather ;
select city, (temp_lo + temp_hi) / 2 as temp_avg, date from weather ;
select * from weather  where city = 'San Francisco' and prcp > 0.0;
select * from weather  where city = 'San Francisco';
select * from weather  where not city = 'San Francisco';
select * from weather odred by city;
select * from weather orded by city;
select * from weather order by city;
select * from weather order by city, temp_lo;
select * from weather reverse order by city, temp_lo;
select * from weather reversed order by city, temp_lo;
select * from weather reversedasdasd order by city, temp_lo;
select distinct * from weather;
select distinct city from weather;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select * from weather order by city;
select distinct city  from weather  order by city;
select distinct city  from weather  order by city;
select distinct city  from weather  order by city;
select distinct city  from weather  order by city;
select distinct city  from weather  order by city;
select * from cities;
SELECT * FROM weather ;
SELECT *  FROM weather, cities  WHERE city = name;
SELECT *  FROM weather, cities  WHERE city = name;
SELECT *  FROM weather, cities  WHERE city = nameorder by date;
insert into cities values ('Hayward', '(1,1)');
SELECT * from cities ;
SELECT *  FROM weather, cities  WHERE city = nameorder by date;
SELECT * from weather ;
SELECT * from cities ;
DELETE FROM cities where name = 'Hayward';
SELECT * from cities ;
SELECT city, temp_lo, temp_hi, prcp, date, location  FROM weather, cities  WHERE city = name;
SELECT city, temp_lo, temp_hi, prcp, date, location  FROM weather, cities;
SELECT *  FROM weather, cities;
select *  from weather  left outer join cities on (weather.city = cities.name);
select *  from weather  right outer join cities on (weather.city = cities.name);
insert into cities values ('Vancouver', '()');
insert into cities values ('Vancouver', '(49,123)');
SELECT * FROM cities;
select *  from weather  right outer join cities on (weather.city = cities.name);
select *  from weather  both outer join cities on (weather.city = cities.name);
select *  from weather  full outer join cities on (weather.city = cities.name);
select w1.city, w1.temp_lo as low, w1.temp_hi as high, w2.city, w2.temo_lo as low, w2.temp_hi as high  from weather w1, weather w2  where w1.temp_lo < w2.temp_lo  and w1.temp_hi > w2.temp_hi;
select w1.city, w1.temp_lo as low, w1.temp_hi as high, w2.city, w2.temo_lo as low, w2.temp_hi as high  from weather w1, weather w2  where w1.temp_lo < w2.temp_lo  and w1.temp_hi > w2.temp_hi;
select w1.city, w1.temp_lo as low, w1.temp_hi as high, w2.city, w2.temp_lo as low, w2.temp_hi as high  from weather w1, weather w2  where w1.temp_lo < w2.temp_lo  and w1.temp_hi > w2.temp_hi;
select w1.city, w1.temp_lo as low, w1.temp_hi as high, w2.city, w2.temp_lo as low, w2.temp_hi as high  from weather w1, weather w2;
select *  from weather w, cities c  where w.city = c.name;
SELECT max(temp_lo) from weather ;
SELECT city, max(temp_lo) from weather ;
SELECT max(temp_lo) from weather ;
SELECT max(temp_lo) from weather group by city;
SELECT max(temp_lo) from weather ;
SELECT city from weather where temp_lo = (SELECT max(temp_lo) from weather);
SELECT * from weather ;
SELECT city from weather where temp_lo = (SELECT min(temp_lo) from weather);
SELECT city, max(temp_lo) from weather group by city;
SELECT max(temp_lo) from weather group by city;
SELECT city, max(temp_lo) from weather group by city;
SELECT city, max(temp_lo) from weather group by city having max(temp_lo) < 40;
SELECT city, max(temp_lo) from weather group by city having max(temp_lo) > 40;
update weatherl;
SELECT * from weather;
update weather  set temp_hi = temp_hi - 2, temp_lo = temp_lo - 2  where date > '1994-11-28';
SELECT * from weather;
update weather  set temp_hi = temp_hi + 2, temp_lo = temp_lo + 2  where date > '1994-11-28';
SELECT * from weather;
DELETE FROM weather WHERE city = ''Hayward';SELECT * from weather;SELECT * from weather;'DELETE FROM weather WHERE city = 'Hayward';
DELETE FROM weather WHERE city = 'Hayward';
SELECT * from weather;
create view myview as  select city, temp_lo, temp_hi, prcp, date, location    from weather, cities    where city = name;
select * from mmyview;
select * from myview;
create view myview2 as  select city, temp_lo, temp_hi, prcp, date, location    from weather    left outer join cities on weather.city = cities.name;
select * from myview2 ;
SELECT * from weather ;
insert into weather values ('Hayward', 30, 50, 0, '1994-11-29');
SELECT * from weather ;
SELECT * from cities ;
select * from myview2 ;
create table cities (  city    varchar(80) primary key,  location point);
create table weather (  city          varchar(80) references cities(city),  temp_lo       int,  temp_hi       int,  prcp          real,  date          date);
INSERT into weather values ('Berkeley', 45, 53, 0.0, '1994-11-28');
copy empsalary from 'empsalary.dat';
create table empsalary (  depname      varchar(80),  empno        int,  salary       int,);
create table empsalary (  depname      varchar(80),  empno        int,  salary       int);
copy empsalary from 'empsalary.dat';
copy empsalary from '/home/erszcz/work/learning/postgresql-tutorial/empsalary.dat';
SELECT * from empsalary ;
SELECT * from empsalary ;
select depname, empno, salary, rank() over (partition by depname order by salary) from empsalary ;
SELECT * from empsalary ;
select depname, empno, salary, rank() over (partition by depname order by salary) from empsalary ;
select depname, empno, salary, avg(salary) over (partition by depname) from empsalary ;
select depname, empno, salary, avg(salary) over (partition by depname) from empsalary ;
select depname, empno, salary, rank() over (partition by depname order by salary) from empsalary ;
SELECT salary, sum(salary) over () form empsalary;
SELECT salary, sum(salary) over () from empsalary;
SELECT salary, sum(salary) over (partition by depname) from empsalary;
SELECT salary, sum(salary) over (partition by depname order by salary) from empsalary;
SELECT depname, salary, sum(salary) over (partition by depname order by salary) from empsalary;
SELECT depname, salary, sum(salary) over (order by salary) from empsalary;
alter table empsalary add column enroll_date date ;
SELECT * from empsalary limit 1;
SELECT count(*) from empsalary ;
copy empsalary enroll_date from '/home/erszcz/work/learning/postgresql-tutorial/empsalary-enroll_date.dat';
copy empsalary (enroll_date) from '/home/erszcz/work/learning/postgresql-tutorial/empsalary-enroll_date.dat';
SELECT * from empsalary ;
SELECT * from empsalary , empsalary where empno not null and enroll_date not null;
SELECT * from empsalary , empsalary where empno is not null and enroll_date is not null;
SELECT depname, empno, enroll_date from empsalary , empsalary where empno is not null and enroll_date is not null;
SELECT depname, empno, enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null;
SELECT e1.depname, e1.empno, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null;
SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null;
SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null;
SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null group by e1.empno;
SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null;
copy empsalary (SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null) to 'empsalary-new.dat' with csv;
create view new_empsalary SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null) to 'empsalary-new.dat' with csv;
create view new_empsalary as SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null) to 'empsalary-new.dat' with csv;
create view new_empsalary as SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null;
SELECT * from new_empsalary ;
copy  to 'new_empsalary.dat' with csv;
copy (SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null) to 'empsalary-new.dat' with csv;
copy (SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null) to '/home/erszcz/work/learning/postgresql-tutorial/empsalary-new.dat' with csv;
copy (SELECT e1.depname, e1.empno, e1.salary, e2.enroll_date from empsalary e1, empsalary e2 where e1.empno is not null and e2.enroll_date is not null) to '/home/erszcz/work/learning/postgresql-tutorial/empsalary-new.dat' with csv;
drop from empsalary ;
DELETE FROM empsalary ;
SELECT * from empsalary ;
copy empsalary from '/home/erszcz/work/learning/postgresql-tutorial';
copy empsalary from '/home/erszcz/work/learning/postgresql-tutorial/empsalary-new.dat' with csv;
SELECT * from empsalary ;
SELECT depname, empno, salary, enroll_dateFROM  (SELECT depname, empno, salary, enroll_date          rank() over (PARTITION BY depname ORDER BY salary DESC, empno) AS pos     FROM empsalary  ) AS ssWHERE pos < 3;
SELECT depname, empno, salary, enroll_dateFROM  (SELECT depname, empno, salary, enroll_date,          rank() over (PARTITION BY depname ORDER BY salary DESC, empno) AS pos     FROM empsalary  ) AS ssWHERE pos < 3;
SELECT depname, empno, salary, enroll_date, ss, posFROM  (SELECT depname, empno, salary, enroll_date,          rank() over (PARTITION BY depname ORDER BY salary DESC, empno) AS pos     FROM empsalary  ) AS ssWHERE pos < 3;
SELECT sum(salary) OVER w, avg(salary) OVER w  FROM empsalary  WINDOW w AS (PARTITION BY depname ORDER BY salary DESC);
SELECT * FROM empsalary ;
SELECT year(enroll_date) from empsalary ;
SELECT get_year(enroll_date) from empsalary ;
SELECT EXTRACT(YEAR FROM enroll_date) FROM empsalary;
SELECT EXTRACT(YEAR FROM enroll_date) AS enroll_yaer FROM empsalary;
SELECT EXTRACT(YEAR FROM enroll_date) AS enroll_year FROM empsalary;
SELECT * FROM empsalary ;
SELECT depname, empno, rank() OVER dept, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname)  WINDOW enroll_year AS (PARTITION BY EXTRACT(YEAR FROM enroll_date));
SELECT depname, empno, rank() OVER dept, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname),enroll_year AS (PARTITION BY EXTRACT(YEAR FROM enroll_date));
SELECT depname, empno, rank() OVER dept, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname),enroll_year AS (PARTITION BY EXTRACT(YEAR FROM enroll_date));
SELECT depname, empno, rank() OVER dept, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname);
SELECT depname, empno, rank() OVER dept  FROM empsalary  WINDOW dept AS (PARTITION BY depname);
SELECT depname, empno, rank() OVER dept  FROM empsalary  WINDOW dept AS (PARTITION BY depname ORDER BY salary);
SELECT depname, empno, rank() OVER dept, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname ORDER BY salary),enroll_year AS (PARTITION BY EXTRACT(YEAR FROM enroll_date));
SELECT depname, empno, rank() OVER dept, EXTRACT(YEAR FROM enroll_date AS enroll_year, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname ORDER BY salary),enroll_year AS (PARTITION BY enroll_year));
SELECT depname, empno, rank() OVER dept, EXTRACT(YEAR FROM enroll_date) AS enroll_year, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname ORDER BY salary),enroll_year AS (PARTITION BY enroll_year);
SELECT depname, empno, rank() OVER dept, EXTRACT(YEAR FROM enroll_date) AS enroll_year, avg(salary) OVER enroll_year  FROM empsalary  WINDOW dept AS (PARTITION BY depname ORDER BY salary),enroll_year AS (PARTITION BY EXTRACT(YEAR FROM enroll_date));
